service: organizations

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-1
  environment: # Service wide environment variables
    MONGODB_CONNECTION_STRING: ${env:bizhub_api_mongodb_connectionstring_dev}

functions:
  authorizerFn:
    handler: src/handlers/authorizer.authorize
    environment:
      SENTRY_DSN: ${env:bizhub_api_sentry_dsn_dev}
  getOrgs:
    handler: src/handlers/handler-factory.get
    events:
      - http:
          path: organizations
          method: get
          cors: true
  
  getOrgById:
    handler: src/handlers/handler-factory.getById
    events:
      - http:
          path: organizations/{id}
          method: get
          cors: true

  createOrg:
    handler: src/handlers/handler-factory.create
    events:
      - http:
          path: organizations
          method: post
          authorizer: authorizerFn
          cors: true

  deleteOrg:
    handler: src/handlers/handler-factory.remove
    events:
      - http:
          path: organizations/{id}
          method: delete
          authorizer: authorizerFn
          cors: true

  createOffice:
    handler: src/handlers/handler-factory.create
    events:
      - http:
          path: offices
          method: post
          authorizer: authorizerFn
          cors: true

  getOffices:
    handler: src/handlers/handler-factory.get
    events:
      - http:
          path: offices
          method: get
          cors: true
  
  getOfficeById:
    handler: src/handlers/handler-factory.getById
    events:
      - http:
          path: offices/{id}
          method: get
          cors: true

  createTimeEntry:
    handler: src/handlers/handler-factory.create
    events:
      - http:
          path: time-entries
          method: post
          authorizer: authorizerFn
          cors: true
  
  getTimeEntries:
    handler: src/handlers/handler-factory.get
    events:
      - http:
          path: time-entries
          method: get
          authorizer: authorizerFn
          cors: true

  createInvoice:
    handler: src/handlers/handler-factory.create
    events:
      - http:
          path: invoices
          method: post
          authorizer: authorizerFn
          cors: true
  getInvoices:
    handler: src/handlers/handler-factory.get
    events:
      - http:
          path: invoices
          method: get
          authorizer: authorizerFn
          cors: true
  getInvoiceById:
    handler: src/handlers/handler-factory.getById
    events:
      - http:
          path: invoices/{id}
          method: get
          cors: true
  getMyOrgs:
    handler: src/handlers/handler-factory.get
    events:
      - http:
          path: me/organizations
          method: get
          authorizer: authorizerFn
          cors: true

plugins:
  - serverless-offline
