# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: organizations

package:
  include:
    - ../node_modules/async/**
    - ../node_modules/bson/**
    - ../node_modules/co/**
    - ../node_modules/extend/**
    - ../node_modules/kareem/**
    - ../node_modules/hooks-fixed/**
    - ../node_modules/mongodb/**
    - ../node_modules/mongodb-core/**
    - ../node_modules/mongoose/**
    - ../node_modules/mongoose-auto-increment/**
    - ../node_modules/mpath/**
    - ../node_modules/mpromise/**
    - ../node_modules/mquery/**
    - ../node_modules/ms/**
    - ../node_modules/muri/**
    - ../node_modules/regexp-clone/**
    - ../node_modules/require_optional/**
    - ../node_modules/resolve-from/**
    - ../node_modules/semver/**
    - ../node_modules/sliced/**
    - ../node_modules/q/**
    - ../node_modules/ajv/**
    - ../node_modules/json-stable-stringify/**

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  profile: sls
  region: eu-west-1
  environment: # Service wide environment variables
    MONGODB_CONNECTION_STRING: mongodb://localhost/bizhub

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  getOrgs:
    handler: organizationsHandler.get
    events:
      - http:
          path: organizations
          method: get
  
  getById:
    handler: organizationsHandler.getById
    events:
      - http:
          path: organizations/{id}
          method: get

  postOrg:
    handler: organizationsHandler.create
    events:
      - http:
          path: organizations
          method: post

  createOffice:
    handler: officesHandler.create
    events:
      - http:
          path: offices
          method: post

  getOffices:
    handler: officesHandler.get
    events:
      - http:
          path: offices
          method: get

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
plugins:
  - serverless-offline
